
package org.asura.csveditor.fx.table.model;

import org.junit.jupiter.api.Test;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.Matchers.*;


/**
 * unit test for the csv model
 */
public class CSVModelTest {

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // constants
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private static final String TESTHEADER = "TESTHEADER";
    private static final String TESTVALUE = "TESTVALUE";

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // subject under test
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    private CSVModel sut = new CSVModel();

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // tests
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    @Test
    public void fresh_model_has_empty_rows() {
        // assertion
        assertThat(sut.getRows(), empty());
    }

    @Test
    public void adds_a_new_row_into_row_list() {
        // execution
        CSVRow newRow = sut.addRow();

        // assertion
        assertThat(sut.getRows(), contains(newRow));
    }

    @Test
    public void new_row_has_last_index_of_list_as_rownumber() {
        // execution
        CSVRow newRow = sut.addRow();

        // assertion
        assertThat(sut.getRows().indexOf(newRow), is(newRow.getRowNumber()));
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    // private methods
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    private void setup_model_with_one_row_one_column_and_value() {
        sut.setHeader(new String[] {TESTHEADER});
        sut.addRow().addValue(TESTHEADER, TESTVALUE);
    }
}
